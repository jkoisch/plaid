= plaid

Accessing the Plaid API using Ruby.

=== Version

Head is 0.2.0

== API

=== Grab a client

    client = Plaid.client 'user@name.com','pass_word', 'amex'

Where the last value is the institution.

=== Connect

Plaid uses the "connect" Plaid API call to initiate the user flow and to access information.

    info = client.connect               <= gets information from Plaid

=== Responses

This gem returns values in response objects or error objects. This is not very ruby-esque,
but it helps to make sense of the integration environment as well as making HTTPParty consumable for a business.

Response objects are initialized when the client gets a valid response from plaid. In the case of non-MFA banks

    r = client.connect

* r.raw_response    <= the raw HTTPParty response from Plaid
* r.access_token    <= the unique access token Plaid defines for the user
* r.accounts        <= Array of accounts associated with this institution for this user
* r.transactions    <= Array of transactions associated with the accounts
* r.is_mfa?         <= false for this request
* r.message         <= "Successful retrieved information from bank"
* r.http_code       <= 200 in this case

=== Errors

Errors use the error object

    client = Plaid.client 'user@name.com','pass_word_xyz', 'amex'
    r = client.connect

* r.http_code       <= 402
* r.plaid_code      <= Plaid's internal error code (https://plaid.com/expand#Response_Code_Detail)
* r.error_message   <= "Error"
* r.resolution      <= "The username or password provided were not correct."
* r.raw_response    <= the raw HTTPParty response



== Configuration

You can configure access through your own initializers.

    #config/initializers/bill_dot_com.rb

== Additional Client Methods

== Contributing to plaid
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2014 John Koisch. See LICENSE.txt for
further details.

